#!/usr/bin/gjs
// -*- mode: js; js-indent-level: 4; indent-tabs-mode: nil -*-

// Script to launch an executable using a localized command line
//
// Usage:
//   eos-exec-localized <default_exec_string>
//                      <language_name1>:<exec_string1>
//                      <language_name2>:<exec_string2>
//                      ...
//
// For example:
//   eos-exec-localized 'myApp' es:'myApp --lang=es' pt:'myApp --lang=pt' 

const GLib = imports.gi.GLib;

const DEFAULT_KEY = ''

const parseExecStrings = function(args) {
    let execStrings = new Object();
    for (let index in args) {
        let arg = args[index];
        if (index == 0) {
            // The first argument is the default exec string
            execStrings[DEFAULT_KEY] = arg;
        } else {
            // Subsequent arguments are of the form language:exec
            let [key, value] = arg.split(':');
            execStrings[key] = value;
        }
    }

    return execStrings;
}

const getLocalizedExec = function(execStrings) {
    let languages = GLib.get_language_names();

    for (let key in languages) {
        let language = languages[key];
        if (language in execStrings) {
            return execStrings[language];
        }
    }

    return execStrings[DEFAULT_KEY];
}

let execStrings = parseExecStrings(ARGV);
let localizedExec = getLocalizedExec(execStrings);

try {
    GLib.spawn_command_line_async(localizedExec);
} catch (e) {
    logError(e, 'Error executing \'' + localizedExec + '\'');
}
